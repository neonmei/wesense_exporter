extensions:
  health_check: {}

receivers:
  otlp:
    protocols:
      grpc:
      http:

  # prometheus:
  #   config:
  #     scrape_configs:
  #     - job_name: 'otel-collector'
  #       scrape_interval: 10s
  #       static_configs:
  #       - targets: ['0.0.0.0:8888']

processors:
  batch:
  spanmetrics:
    metrics_exporter: prometheus
    latency_histogram_buckets: [200ms, 400ms, 800ms, 1s, 1200ms, 1400ms, 1600ms, 1800ms, 2s, 5s, 7s]
    dimensions_cache_size: 1000
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    dimensions:
      - name: http.method
      - name: http.status_code

exporters:
  jaeger:
    endpoint: 127.0.0.1:14250
    tls:
      insecure: true
  logging:
    loglevel: debug
  prometheus:
    endpoint: 0.0.0.0:8889
    metric_expiration: 1440m

service:
  telemetry:
    logs:
      level: "warn"
  extensions: [ health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [spanmetrics, batch]
      exporters: [logging, jaeger]
    metrics:
      receivers: [otlp]
      exporters: [logging, prometheus]